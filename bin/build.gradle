buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "net.serenity-bdd:serenity-gradle-plugin:3.2.0"
  }
}

plugins {
    id 'java'
    id 'se.thinkcode.cucumber-runner' version '0.0.8'

    // we donâ€™t need to *apply* the plugin to the root project, do we?
    id 'com.github.spotbugs' version '4.7.0' apply false
}

apply plugin: 'java'
apply plugin: "net.serenity-bdd.serenity-gradle-plugin"

defaultTasks 'clean', 'test', 'aggregate'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    slf4jVersion = '1.7.7'
    serenityCoreVersion = '3.2.0'
    serenityCucumberVersion = '3.2.0'
    assertJVersion = '3.8.0'
    logbackVersion = '1.2.10'
}

dependencies {
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    testImplementation platform("org.junit:junit-bom:5.8.1")

    testImplementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-cucumber:${serenityCucumberVersion}",
            "org.junit.platform:junit-platform-launcher",
            "org.junit.jupiter:junit-jupiter-engine",
            "org.junit.vintage:junit-vintage-engine",
            "org.assertj:assertj-core:${assertJVersion}"
}

test {
    reports {
        html.enabled = true
    }

    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    //dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

serenity {
    // Specify the root package of any JUnit acceptance tests to appear in the Serenity report
    testRoot = "starter"
    // Specify the root directory of any Cucumber feature files
    requirementsDir = "src/test/resources/features"

}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumberCli() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
              '--plugin', 'pretty',
              '--plugin', 'html:target/cucumber-report.html',
              '--glue', 'src/test/resources']
        }
    }
}

cucumber {
    main = "io.cucumber.core.cli.Main"
}

apply plugin: 'com.github.spotbugs'
spotbugs {
    toolVersion = '4.2.2'
    ignoreFailures = true
    reportsDir = file("$project.buildDir/reports/findbugs")
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)
